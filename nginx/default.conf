# 출처 : https://loy124.tistory.com/360

# 참고로, 여기 있는 포트들은 '외부' 포트이다. '도커 내부' 포트가 아니다!

#3000번 포트에서 frontend가 돌아가는것을 명시
upstream frontend {
    server frontend:3000;
}

#5000번 포트에서 backend가 돌아가는것을 명시
upstream backend {
    server backend:3050;
}

server {
    #nginx 포트를 80번으로 열어준다. 
    listen 80;
    
    # /로 시작하는 부분이 우선순위가 가장 낮다 
    # /로 들어오는 요청은 http://frontend로 보내준다
    # frontend라는 이름은 docker-compose에서 서비스 명으로 정의해줄 예정 
    location / {
        proxy_pass http://frontend;
    }

    # /api로 들어오는 요청은 http://backend로 보내준다
    # backend라는 이름은 docker-compose에서 서비스 명으로 정의해줄 예정 
    # rewrite 이유 : /api 로 들어오는걸 / 로 들어오게 만들어서 back에서는 /api가 아닌 / 로 라우팅되게 하려고
    # 이유 알게된 출처 : https://www.thegeekstuff.com/2017/08/nginx-rewrite-examples/   
    # break 플래그 참고 : https://ohgyun.com/541
    location /api {
        rewrite /api/(.*) /$1 break;
        proxy_pass http://backend;
    }
    
    #아래 부분을 만들어 줘야 개발환경 내에서 에러가 발생하지 않는다. 
    #Adding the location /sockjs-node for the client to make the web sockets connection and connect to the server. 
    #We should define the sockjs-node path here.
    #출처 : https://www.section.io/engineering-education/build-and-dockerize-a-full-stack-react-app-with-nodejs-and-nginx/
    location /sockjs-node {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
}